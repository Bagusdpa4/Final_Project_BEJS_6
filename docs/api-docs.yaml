openapi: 3.0.1
info:
  title: Final-Project-B-6
  description: API Pemesanan Ticketing Pesawat
  version: 1.0.0
servers:
  - url: https://express-development.up.railway.app/api/v1
  - url: http://localhost:3000/api/v1
tags:
  - name: "Users"
    description: Operations about user
  - name: "Ticket"
    description: Operations about Flight Schedule
  - name: "Notification"
    description: Operations about Notification
paths:
  /users/register:
    post:
      tags:
        - "Users"
      summary: Register user
      description: Register user with the provided information.
      requestBody:
        $ref: "#/components/requestBodies/createUser"

      responses:
        201:
          description: User created was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User Created Successfully
                  data:
                    $ref: "#/components/schemas/UserResponse"

        400:
          description: Input must be required!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Input must be required
                  data:
                    example: ~

        401:
          description: Email already used!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email already used!
                  data:
                    example: ~

  /users/login:
    post:
      tags:
        - "Users"
      summary: Login user
      description: Login user with the provided information.
      requestBody:
        $ref: "#/components/requestBodies/createLogin"

      responses:
        201:
          description: Login was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Login was successfull
                  data:
                    allOf:
                      - $ref: "#/components/schemas/UserResponse"
                      - type: object
                        properties:
                          token:
                            type: integer
                            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiZnVsbG5hbWUiOiJCYWd1cyBEd2kgUHV0cmEgQWRpeW9ubyIsImZhbWlseV9uYW1lIjpudWxsLCJlbWFpbCI6InN1Z2FiLmR3aTg4QGdtYWlsLmNvbSIsInBob25lTnVtYmVyIjoiMDgyMjI5NzQ5NDYyIiwiYXZhdGFyX3VybCI6bnVsbCwiZ29vZ2xlX2lkIjpudWxsLCJvdHAiOiI2NjI1NDMiLCJvdHBDcmVhdGVkQXQiOiIyMDI0LTA1LTI0VDE2OjEzOjU2LjA4OFoiLCJpc1ZlcmlmaWVkIjp0cnVlLCJyb2xlIjoidXNlciIsImlhdCI6MTcxNjU2NzI1OH0._tBfHd_s_J9UWnblX_tHjnTmmt5b2PdXpvekhjHRXF0

        400:
          description: invalid email or password!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: invalid email or password!
                  data:
                    example: ~

        403:
          description: Verify Account User!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Account not verified. Please check your email!
                  data:
                    example: ~

  /users/verify-otp:
    put:
      tags:
        - "Users"
      summary: Verify Otp Email User
      description: Verify Otp Email User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: flynowb6@gmail.com
                otp:
                  type: string
                  example: 123456

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Activation successfully. You're Account is Verified"
                  data:
                    $ref: "#/components/schemas/UserResponse"

        400:
          description: OTP Expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "OTP has expired. Please resend new otp."
                  data:
                    example: ~

        401:
          description: Invalid OTP
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid OTP"
                  data:
                    example: ~

        404:
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "user not found"
                  data:
                    example: ~

  /users/resend-otp:
    put:
      tags:
        - "Users"
      summary: Resend Verify Otp Email User
      description: Resend Verify Otp Email User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: flynowb6@gmail.com

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Resend OTP successfully"
                  data:
                    $ref: "#/components/schemas/UserResponse"

        404:
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "user not found"
                  data:
                    example: ~

  /users/forget-password:
    post:
      tags:
        - "Users"
      summary: Forget Password Email User
      description: Forget Password Email User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: flynowb6@gmail.com

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Success Send Email Forget Password"

        404:
          description: user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "user not found"
                  data:
                    example: ~

  /users/reset-password:
    put:
      tags:
        - "Users"
      summary: Reset Password Email User
      parameters:
        - schema:
            type: string
          name: token
          in: query
          description: token for update password
      description: Reset Password Email User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: FlynowB6#
                passwordConfirmation:
                  type: string
                  example: FlynowB6#

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Your password has been updated successfully!"
                  data:
                    $ref: "#/components/schemas/UserResponse"

        400:
          description: Both password and password confirmation are required!!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Both password and password confirmation are required!!"
                  data:
                    example: ~

        401:
          description: Please ensure that the password and password confirmation match!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Please ensure that the password and password confirmation match!"
                  data:
                    example: ~

        403:
          description: Invalid or expired token!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid or expired token!"
                  data:
                    example: ~

  /users/authenticate:
    get:
      tags:
        - "Users"
      summary: Authenticate user
      description: Authenticate user with the token.

      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: OK
                  data:
                    $ref: "#/components/schemas/UserResponse"

        403:
          description: Token not provided!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: token not provided!!
                  data:
                    example: ~

        409:
          description: jwt malformed!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: jwt malformed
                  data:
                    example: ~
      security:
        - bearerAuth: []

  /schedule:
    post:
      tags:
        - "Ticket"
      summary: Find ticket
      description: Find ticket
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                city_arrive_id:
                  type: integer
                  example: 2
                city_destination_id:
                  type: integer
                  example: 1
                date_departure:
                  type: string
                  example: 25-05-2024
                # date_return:
                #   type: string
                #   example: 20/06/2024
                seat_class:
                  type: integer
                  example: 2
                passenger:
                  type: object
                  properties:
                    adult:
                      type: integer
                      example: 1
                    children:
                      type: integer
                      example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/FlightSchedule"
  /class:
    get:
      tags:
        - "Ticket"
      summary: Get All type_class
      description: Get All type_class
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success retrive city data
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        type_class:
                          type: string
                          example: Ekonomi
  /city:
    get:
      tags:
        - "Ticket"
      summary: Get All city and Find city
      description: Get All city and Find city
      parameters:
        - in: path
          name: Find
          schema:
            type: string
          required: true

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success retrive city data
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Tangerang
                        code:
                          type: string
                          example: CGK
                        airport_name:
                          type: string
                          example: Bandara Internasional Soekarno-Hatta
                        country:
                          type: string
                          example: Indoensia
  /continents:
    get:
      tags:
        - "Ticket"
      summary: Get All continents
      description: Get All continents
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: success retrive continent data
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Asia
                        code:
                          type: string
                          example: AS
  /notifications:
    get:
      tags:
        - "Notification"
      summary: Get All notification
      description: Get All notification
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Notifications retrieved successfully
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: Password Updated!
                        message:
                          type: string
                          example: Your password has been updated successfully!
                        isRead:
                          type: boolean
                          example: false
                        createdAt:
                          type: string
                          example: 2024-05-26T14:20:18.724Z
                        user_id:
                          type: integer
                          example: 1
      security:
        - bearerAuth: []

  /notifications/markAsRead:
    put:
      tags:
        - "Notification"
      summary: Update Status notification
      description: Update Status notification
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Notifications marked as read for the user
                  data:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 2
      security:
        - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        fullname:
          type: string
          example: Flynow Foundation
        family_name:
          type: string
          example: ~
        email:
          type: string
          example: flynowb6@gmail.com
        phoneNumber:
          type: string
          example: "08123456789"
        avatar_url:
          type: string
          example: ~
        google_id:
          type: string
          example: ~
        otp:
          type: string
          example: 123456
        otpCreatedAt:
          type: string
          example: 2024-05-24T16:03:46.444Z
        isVerified:
          type: boolean
          example: false
        role:
          type: string
          example: user
    FlightSchedule:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: ID Jadwal Penerbangan
        flight_number:
          type: string
          example: mup-570825
          description: Nomor Penerbangan
        time_arrive:
          type: string
          example: 14:45
          description: Waktu Tiba
        time_departure:
          type: string
          example: 06:00
          description: Waktu Berangkat
        date_flight:
          type: string
          example: 25-05-2024
          description: Tanggal Penerbangan
        estimation_minute:
          type: integer
          example: 240
          description: Estimasi Menit
        city_arrive_id:
          type: integer
          example: 2
          description: ID Kota Tiba
        city_destination_id:
          type: integer
          example: 1
          description: ID Kota Tujuan
        city_arrive:
          $ref: "#/components/schemas/City"
        city_destination:
          $ref: "#/components/schemas/City"
        DetailFlight:
          type: array
          items:
            $ref: "#/components/schemas/DetailFlight"

    DetailFlight:
      type: object
      properties:
        price:
          type: integer
          example: 500000
          description: Harga
        detailPlaneId:
          $ref: "#/components/schemas/PlaneDetail"

    PlaneDetail:
      type: object
      properties:
        seat_class:
          $ref: "#/components/schemas/SeatClass"
        plane:
          $ref: "#/components/schemas/Plane"

    SeatClass:
      type: object
      properties:
        type_class:
          type: string
          example: Ekonomi
          description: Jenis Kelas

    Plane:
      type: object
      properties:
        name:
          type: string
          example: Boeing 737-800
          description: Nama Pesawat

    City:
      type: object
      properties:
        code:
          type: string
          example: CGK
          description: Kode Kota
        name:
          type: string
          example: Tangerang
          description: Nama Kota
        airport_name:
          type: string
          example: Bandara Internasional Soekarno-Hatta
          description: Nama Bandara

  requestBodies:
    createLogin:
      content:
        application/json:
          schema:
            type: object
            properties:
              emailOrPhoneNumber:
                type: string
                example: flynowb6@gmail.com
              password:
                type: string
                example: Flynowb6#
    createUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              fullname:
                type: string
                example: Flynow Foundation
              email:
                type: string
                example: flynowb6@gmail.com
              phoneNumber:
                type: string
                example: "08123456789"
              password:
                type: string
                example: Flynowb6#
